@model ExpensesApp.Models.ViewModels.TransactionListVM
@{
    ViewData["Title"] = "Transactions";
}
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-light">My Transactions</h2>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="Transaction" asp-action="Create" asp-route-Type="@ExpensesApp.Models.Enums.TransactionType.Expense" class="btn btn-primary">Add New Expense</a>
            <a asp-controller="Transaction" asp-action="Create" asp-route-Type="@ExpensesApp.Models.Enums.TransactionType.Income" class="btn btn-primary">Add New Income</a>
        </div>
    </div>
    <br />
    <div class="row pt-4">
        <div class="col-3">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <button id="tab-btn-1" class="tab-btn nav-link active">Expenses</button>
                </li>
                <li class="nav-item">
                    <button id="tab-btn-2" class="tab-btn nav-link">Income</button>
                </li>
            </ul>
        </div>
        <div class="col-5">

            @{
                DateTime date = Model.DateFrom;
                var firstDayOfMonth = new DateTime(date.Year, date.Month, 1);
                var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);
                string previousMonthURL = "/?filterDateFrom=" + firstDayOfMonth.AddMonths(-1).ToString("d") + "&filterDateTo=" + lastDayOfMonth.AddMonths(-1).ToString("d");
                string nextMonthURL = "/?filterDateFrom=" + firstDayOfMonth.AddMonths(1).ToString("d") + "&filterDateTo=" + lastDayOfMonth.AddMonths(1).ToString("d");
            }
            <a href="@previousMonthURL" class="btn btn-primary mx-1 prev-month"><</a>
            <span class="prev-month-label">Previous Month</span>
            @date.ToString("MMMM")
            <a href="@nextMonthURL" class="btn btn-primary mx-1 next-month">></a>
            <span class="next-month-label">Next Month</span>
            <button id="filterBtn" class="btn btn-secondary">Filter</button>
            <form method="get" class="filter-form" asp-action="Index">
                <input asp-for="DateFrom" type="date" name="filterDateFrom" value="@Model.DateFrom.ToString("d")" />
                <input asp-for="DateTo" type="date" name="filterDateTo" value="@Model.DateTo.ToString("d")" />
                <input type="submit" name="" value="Filter" class="btn btn-primary" />
            </form>
        </div>
        <div class="col-4">
            @{
                var expenses = Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Expense);
                Double totalExpenses = expenses.Sum(i => i.Amount);
                var income = Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Income);
                Double totalIncome = income.Sum(i => i.Amount);
                var balance = totalIncome - totalExpenses;
            }
            <h3 class="balance text-right">Your balance: @balance</h3>
        </div>
    </div>
    <div id="tab-1" class="tab show">
        @if (Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Expense).Count() > 0)
        {
            <table class="table table-bordered table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th>
                            Date
                        </th>
                        <th>
                            Expense
                        </th>
                        <th>
                            Amount
                        </th>
                        <th>
                            Category
                        </th>
                        <th>
                            Changes
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var transaction in Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Expense).OrderBy(a => a.Date))
                    {
                        <tr>
                            <td width="20%">@transaction.Date.ToString("yyyy-MM-dd")</td>
                            <td width="20%">@transaction.Title</td>
                            <td width="15%">@transaction.Amount</td>
                            <td width="20%">@transaction.CategoryName</td>
                            <td width="25%">
                                <div class="w-100 btn-group">
                                    <a asp-controller="Transaction" asp-action="Update" asp-route-Id="@transaction.Id" class="btn btn-primary mx-1">Update</a>
                                    @using (Html.BeginForm("Delete", "Transaction", new { id = transaction.Id }, FormMethod.Post))
                                    {
                                        @* Other properties of Model *@
                                        <button type="submit" class="btn btn-danger mx-1">Delete</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            <div>Total amount: @Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Expense).Sum(x => x.Amount)</div>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
        else
        {
            <p>No items created yet</p>
        }
    </div>
    <div id="tab-2" class="tab">
        @if (Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Income).Count() > 0)
        {
            <table class="table table-bordered table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th>
                            Date
                        </th>
                        <th>
                            Income
                        </th>
                        <th>
                            Amount
                        </th>
                        <th>
                            Changes
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.Transactions.Where(x => x.Type == ExpensesApp.Models.Enums.TransactionType.Income).OrderBy(a => a.Date))
                    {
                        <tr>
                            <td width="20%">@transaction.Date.ToString("yyyy-MM-dd")</td>
                            <td width="30%">@transaction.Title</td>
                            <td width="25%">@transaction.Amount</td>
                            <td width="25%">
                                <div class="w-100 btn-group">
                                    <a asp-controller="Transaction" asp-action="Update" asp-route-Id="@transaction.Id" class="btn btn-primary mx-1">Update</a>
                                    @using (Html.BeginForm("Delete", "Transaction", new { id = transaction.Id }, FormMethod.Post))
                                    {
                                        @* Other properties of Model *@
                                        <button type="submit" class="btn btn-danger mx-1">Delete</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No items created yet</p>
        }
    </div>
</div>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-12">
            <h2 class="text-light">Analysis</h2>
        </div>
        <div class="col-12">

        </div>
    </div>
</div>

<figure class="highcharts-figure">
    <div id="pieChart"></div>
</figure>
<script>
    loadChartData('@Model.DateFrom.ToString("d")', '@Model.DateTo.ToString("d")');
</script>